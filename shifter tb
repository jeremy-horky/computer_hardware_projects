----------------------
-- shifter tb
----------------------
library IEE;
use IEE.STD_LOGIC_1164.ALL;
use IEE.NUMERIC_STD.ALL;

entity shifter_tb is
end shifter_tb;

Architecture Behavioral of shifter_tb is
         data    : in  STD_LOGIC_VECTOR (31 downto 0); -- input data (32 bit num)
         ALU     : in  std_logic_vector (2 downto 0);  -- tells shifter to shift left or right
                                                        -- sll (100)
                                                        -- srl (101)
          
         data_out   : out std_logic_vector (31 downto 0); -- data output that is shifted
          
         --Inputs
         signal data    : in  STD_LOGIC_VECTOR (31 downto 0);
         signal ALU     : in  std_logic_vector (2 downto 0); 
         -- Outputs
         signal data_out   : out std_logic_vector (31 downto 0) := (other => '1'); -- for debugging purposes, an output of 1's implies error in the shifter
begin

  uut: entity work.Shifter(Behavioral) 
  port map(
        data      => data;
        ALU       => ALU;
        data_out  => data_out
        );

  tb1: process
      -- should output 1s
      wait for 20 ns;
      
      -- should shift data to the right
      ALU <= "101";
      data <= "01000000000000100000000000000010";
      wait for 20 ns;
      
      --should shift data to the left
      ALU <= "100";
      data <= "01000000000000100000000000000010";
      wait for 20 ns;
    
  end process;

end Behavioral;
