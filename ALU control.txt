---------------------------------
-- ALU control
-- sends signals to ALU to control the operation
-- the out signal will specify an add,sub, and, or, sll, srl, slt or nop to the ALU
---------------------------------

library IEE;
use IEE.STD_LOGIC_1164.ALL;
use IEE.NUMERIC_STD.ALL;

entity ALU_control is
  Port  ( funct       : in  STD_LOGIC_VECTOR (5 downto 0); -- instruction[5-0] 
          alu_op      : in  STD_LOGIC_VECTOR (1 downto 0); -- comes from control
                                                           -- '00' : lw, sw
                                                           -- '01' : beq
                                                           -- '10' : R type
          
          out         : out STD_LOGIC_VECTOR (2 downto 0); -- 3 bit output to control the ALU operation (may need to increase to 4 bit if we add more fuctionality)
end ALU_control;

architecture Behavioral of ALU_control is

begin
  if (alu_op = "10") then -- these are all R type operations so control has set '10' signal to indicate R type
    -- add
    if (funct = "100000") then     -- funct = 20
      out <= "000";
      
    -- sub
    elseif (funct = "100010") then -- funct = 22
      out <= "001";
      
    --AND
    elseif (funct = "100100") then -- funct = 24
      out <= "010";

    --OR
    elseif (funct = "100101") then -- funct = 25
      out <= "011";

    --sll
    elseif (funct = "000000") then -- funct = 0
      out <= "100";
      
    --srl
    elseif (funct = "000010") then -- funct = 2
      out <= "101";
      
    --slt
    elseif (funct = "101010") then -- funct = 2a
      out <= "110";
      
    -- nop
    else
      out <= "111";
    end if;
    
  else
    out <= "111";
  end if;
  
  
end Behavioral;
